
echo "#########################mkdir for 01scf 02wfn etc...#######################"
export wfn_dir=$PWD
nw=`awk '{print NR}' weight.dat |tail -n1`
nb_cv=`expr $nw - 2`
nb_c=`expr $nb_cv - $number_of_valence_electrons`

export main_dir=$wfn_dir/../../

cd $main_dir

cp ./DFT/02wfn/kpoints.dat ./kp
nkline=`awk '{print NR}' kp |tail -n1`
nqs=`expr $nkline - 1`

echo 'begin qpoints'>qpoints
echo 'begin kpoints'>kpoints
qx=`sed -n "2p" kp |awk '{print $1}'`
qy=`sed -n "2p" kp |awk '{print $2}'`
qz=`sed -n "2p" kp |awk '{print $3}'`

if [ $two_dimentional -eq 0 ]; then
mkdir eps sigma intep
qqx=$(printf "%.14f" `echo "scale=14; $qx +${gw_shift[0]}"|bc`)
qqy=$(printf "%.14f" `echo "scale=14; $qy +${gw_shift[1]}"|bc`)
qqz=$(printf "%.14f" `echo "scale=14; $qz +${gw_shift[2]}"|bc`)

cat >epsilon.inp<<!
epsilon_cutoff $epsilon_cutoff
degeneracy_check_override
number_valence_pools 4

wavefunction_cutoff    $encut   
number_bands    $nb_cv    
band_occupation      $number_of_valence_electrons*1 $nb_c*0 

sum_method 0              # 0 is for band summation; default is 2, for exact summation
#cell_slab_truncation
# frequency_dependence 2
# init_frequency 0.0
# delta_frequency 1.0
# number_frequency 1360
# broadening 1.0
# comm_disk
# gcomm_elements
gcomm_matrix

number_qpoints  $nqs

!
fi


if [ $two_dimentional -eq 1 ]; then
mkdir eps1 eps2 eps3 eps4 sigma intep
qqx=$(printf "%.14f" `echo "scale=14; $qx +${gw_shift1[0]}"|bc`)
qqy=$(printf "%.14f" `echo "scale=14; $qy +${gw_shift1[1]}"|bc`)
qqz=$(printf "%.14f" `echo "scale=14; $qz +${gw_shift1[2]}"|bc`)

qqx2=$(printf "%.14f" `echo "scale=14; $qx +${gw_shift2[0]}"|bc`)
qqy2=$(printf "%.14f" `echo "scale=14; $qy +${gw_shift2[1]}"|bc`)
qqz2=$(printf "%.14f" `echo "scale=14; $qz +${gw_shift2[2]}"|bc`)

qqx3=$(printf "%.14f" `echo "scale=14; $qx +${gw_shift3[0]}"|bc`)
qqy3=$(printf "%.14f" `echo "scale=14; $qy +${gw_shift3[1]}"|bc`)
qqz3=$(printf "%.14f" `echo "scale=14; $qz +${gw_shift3[2]}"|bc`)

qqx4=$(printf "%.14f" `echo "scale=14; $qx +${gw_shift4[0]}"|bc`)
qqy4=$(printf "%.14f" `echo "scale=14; $qy +${gw_shift4[1]}"|bc`)
qqz4=$(printf "%.14f" `echo "scale=14; $qz +${gw_shift4[2]}"|bc`)

echo 'begin qpoints'>qpoints2
echo " "$qqx2 "  "$qqy2"  "$qqz2" " "1.0 1" >>qpoints2
echo 'end' >>qpoints2

echo 'begin qpoints'>qpoints3
echo " "$qqx3 "  "$qqy3"  "$qqz3" " "1.0 1" >>qpoints3
echo 'end' >>qpoints3

echo 'begin qpoints'>qpoints4
echo " "$qqx4 "  "$qqy4"  "$qqz4" " "1.0 1" >>qpoints4
echo 'end' >>qpoints4


cat >epsilon.inp<<!
epsilon_cutoff $epsilon_cutoff
degeneracy_check_override
number_valence_pools 4

wavefunction_cutoff    $encut   
number_bands    $nb_cv    
band_occupation      $number_of_valence_electrons*1 $nb_c*0 

sum_method 0              # 0 is for band summation; default is 2, for exact summation
cell_slab_truncation
# frequency_dependence 2
# init_frequency 0.0
# delta_frequency 1.0
# number_frequency 1360
# broadening 1.0
# comm_disk
# gcomm_elements
gcomm_matrix

number_qpoints  $nqs

!
fi

echo " "$qqx "  "$qqy"  "$qqz" " "1.0 1" >>qpoints
echo " "$qx "  "$qy"  "$qz" " "1.0" >>kpoints

for((i=3;i<=$nkline;i++));
do
qx=`sed -n ""$i"p" kp |awk '{print $1}'`
qy=`sed -n ""$i"p" kp |awk '{print $2}'`
qz=`sed -n ""$i"p" kp |awk '{print $3}'`
echo " "$qx "  "$qy"  "$qz" " "1.0 0" >>qpoints
echo " "$qx "  "$qy"  "$qz" " "1.0" >>kpoints
done
echo 'end' >>qpoints
echo 'end' >>kpoints


if [ $two_dimentional -eq 0 ]; then
cat qpoints>>epsilon.inp
mv epsilon.inp ./eps

cat >sigma.inp<<!
screened_coulomb_cutoff   $epsilon_cutoff
bare_coulomb_cutoff       $encut 
wavefunction_cutoff       $encut  
number_bands              $nb_cv 
band_occupation      $number_of_valence_electrons*1 $nb_c*0 

# LSDAU 1
use_oldcdvxcformat 1
degeneracy_check_override
dont_use_vxcdat
sum_method 0              # 0 is for band sampling; default is 2, for exact summation

number_sigma_pools 5

finite_difference_spacing   0.5
# ggpsum 2
screening_semiconductor
# frequency_dependence 2
# avgpot 11.7293027921514049
# init_frequency_eval -5.5
# delta_frequency_eval 0.5
# number_frequency_eval 8

band_index_min   1      # band_index_min and band_index_max fix the range
band_index_max   1      # of calculation in terms of bands

number_kpoints $nqs

!
cat kpoints >>sigma.inp
mv sigma.inp sigma
cat >link.sh<<!
#!/bin/sh
rm epsmat eps0mat* RHO VXC weight.dat WFN_inner
ln -s ../eps/eps0mat .
ln -s ../eps/epsmat .
ln -s ../DFT/01scf/CD95 ./RHO
ln -s ../DFT/01scf/VXC .
ln -s ../DFT/02wfn/weight.dat .
ln -s ../DFT/02wfn/GWC ./WFN_inner
degeneracy_check.x WFN_inner
!
chmod +x link.sh
mv link.sh sigma
fi

if [ $two_dimentional -eq 1 ]; then
cp epsilon.inp epsilon.inp1
cat qpoints>>epsilon.inp1
mv epsilon.inp1 ./eps1/epsilon.inp

cp epsilon.inp epsilon.inp2
cat qpoints2>>epsilon.inp2
mv epsilon.inp2 ./eps2/epsilon.inp

cp epsilon.inp epsilon.inp3
cat qpoints3>>epsilon.inp3
mv epsilon.inp3 ./eps3/epsilon.inp

cp epsilon.inp epsilon.inp4
cat qpoints4>>epsilon.inp4
mv epsilon.inp4 ./eps4/epsilon.inp

cat >sigma.inp<<!
screened_coulomb_cutoff   $epsilon_cutoff
bare_coulomb_cutoff       $encut 
wavefunction_cutoff       $encut  
number_bands              $nb_cv 
band_occupation      $number_of_valence_electrons*1 $nb_c*0 

cell_slab_truncation

# LSDAU 1
use_oldcdvxcformat 1
degeneracy_check_override
dont_use_vxcdat
sum_method 0              # 0 is for band sampling; default is 2, for exact summation
fix2dq0
number_q0 4

number_sigma_pools 5
finite_difference_spacing   0.5

# npwsub 600
# ggpsum 2
screening_semiconductor
# frequency_dependence 2
# avgpot 11.7293027921514049
# init_frequency_eval -5.5
# delta_frequency_eval 0.5
# number_frequency_eval 8
#Define the bands for which we want to compute sigma

band_index_min   1      # band_index_min and band_index_max fix the range
band_index_max   1      # of calculation in terms of bands

number_kpoints $nqs

!
cat kpoints >>sigma.inp
mv sigma.inp sigma

cat >link.sh<<!
#!/bin/sh
rm epsmat eps0mat* RHO VXC weight.dat WFN_inner
ln -s ../eps1/epsmat .
ln -s ../eps1/eps0mat .
ln -s ../eps1/eps0mat ./eps0mat01
ln -s ../eps2/eps0mat ./eps0mat02
ln -s ../eps3/eps0mat ./eps0mat03
ln -s ../eps4/eps0mat ./eps0mat04
ln -s ../DFT/01scf/CD95 ./RHO
ln -s ../DFT/01scf/VXC .
ln -s ../DFT/02wfn/weight.dat .
ln -s ../DFT/02wfn/GWC ./WFN_inner
degeneracy_check.x WFN_inner
!
chmod +x link.sh
mv link.sh sigma
fi


###############################################intep##################################################
if [ -d "intep" ]; then
cd ./intep
cat > inteqp.inp <<!
number_val_bands_coarse 2
number_cond_bands_coarse 2
number_val_bands_fine 1
number_cond_bands_fine 1

use_symmetries_coarse_grid
no_symmetries_fine_grid
no_symmetries_shifted_grid
eqp_co_corrections
!
cd ../
fi



echo "All the BGW input files you want are prepared. Please carefully check everything is right before the submittion!"
